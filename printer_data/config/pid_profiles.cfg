###########################################################
#     This setup provides a clean, macro-based solution for dynamic PID switching in Klipper, 
#     using macros.cfg for macros and pid_profiles.cfg for PID profiles, with no firmware restarts required.
#
#     Because, why not?
#
# Overview
#
#     Store PID Profiles: Define PID values for specific temperatures in pid_profiles.cfg.
#     Macros in macros.cfg: Create macros to select and apply PID values based on the target hotend temperature and override SET_HEATER_TEMPERATURE to trigger PID updates automatically.
#     Include Files in printer.cfg: Ensure macros.cfg and pid_profiles.cfg are included in printer.cfg.
#     Dynamic Application: Use SET_HEATER_PARAMETERS to apply PID values in real-time without restarting Klipper.
#     Slicer Integration: Add a G-code command to the slicerâ€™s start G-code to set the initial PID values.
#
############################################################

# pid_profiles.cfg
[gcode_macro PID_PROFILES]
description: Store PID profiles for different temperatures
variable_profiles: {
    'pid_200': '23.553, 2.309, 60.061',
    'pid_220': '25.407, 2.528, 63.836',
    'pid_240': '25.467, 2.738, 59.212',
    'pid_260': '25.398, 2.731, 59.050',
    'pid_280': '27.206, 2.973, 62.235',
    'pid_300': '29.871, 3.319, 67.210'
}
gcode:
    {action_respond_info("PID_PROFILES macro is for storing PID values only.")}